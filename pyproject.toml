[tool.poetry]
name = "gabgabgurus"
version = "0.1.0"
description = ""
authors = ["Denis <xczdenis@gmail.com>"]
readme = "README.md"
packages = [
    { include = "gabgabgurus", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.11"
django = "^4.2.3"
djangorestframework = "^3.14.0"
djangorestframework-simplejwt = "^5.2.2"
django-admin-inline-paginator = "^0.4.0"
django-admin-rangefilter = "^0.11.2"
django-allauth = "^0.57.0"
django-debug-toolbar = "^4.1.0"
django-cleanup = "^8.0.0"
django-cors-headers = "^4.2.0"
django-filter = "^23.2"
django-redis = "^5.4.0"
django-split-settings = "^1.2.0"
dj-rest-auth = "^5.0.1"
drf-spectacular = "^0.26.3"
pydantic = "^2.0"
pydantic-settings = "^2.0.0"
loguru = "^0.7.0"
psycopg2-binary = "^2.9.6"
orjson = "^3.9.1"
requests = "^2.31.0"
pillow = "^10.1.0"
drf-extra-fields = "^3.7.0"
channels = { extras = ["daphne"], version = "^4.0.0" }
faker = "^20.0.3"
channels-redis = "^4.1.0"
beautifulsoup4 = "^4.12.2"

[tool.poetry.group.dev.dependencies]
isort = "^5.12.0"
pre-commit = "^3.3.3"
black = "^23.9.1"

[tool.poetry.group.lint.dependencies]
autoflake = "^2.2.0"
flake8 = "^6.0.0"
flake8-quotes = "^3.3.2"
flake8-comprehensions = "^3.13.0"
flake8-bandit = "^4.1.1"
flake8-black = "^0.3.6"
pep8-naming = "^0.13.3"


[tool.poetry.group.tests.dependencies]
pytest = "^7.4.0"
pytest-django = "^4.5.2"
model-bakery = "^1.12.0"
coverage = "^7.3.2"
pytest-cov = "^4.1.0"

[tool.pytest.ini_options]
addopts = ["-v", "-p", "no:warnings", "--import-mode=importlib", ]
markers = [
    "unit: mark test as a unit test",
    "integration: mark test as an integration test",
    "functional: mark test as a functional test",
]
DJANGO_SETTINGS_MODULE = "gabgabgurus.config.settings"


[tool.black]
line-length = 110
exclude = '/(\.git|\.venv|\.eggs|build|dist|migrations)/'

[tool.isort]
line_length = 110
multi_line_output = 3
default_section = "THIRDPARTY"
skip = "venv/"
skip_glob = "**/migrations/*.py"
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
